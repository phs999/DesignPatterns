facade外观模式、又称门面模式
用于屏蔽应用层与子系统的直接联系
原来你完成一件事，需要和多个不同职能的类打交道。应用层与多个子系统存在耦合关系。
使用外观模式，外观类会完成与多个不同职能的类打交道的工作，你只需要和这个外观类交互，就可以达到你的目的。
并且降低了耦合度。
积分商城兑换礼物的场景：
至少需要校验库存、校验用户积分是否足够、积分支付、物流发货这几个子系统。
同一使用一个积分兑换礼物的外观类，实现与这几个子系统的具体交互。
外观模式满足迪米特法则，及最少知道法则，使得内部的逻辑细节被隐藏。
但不符合开闭原则，一旦新增子系统，就需要修改外观类，而外观类一般集成的子系统类较多，逻辑复杂，修改会越来越困难。当然可以进一步，对外观类抽象一下，这样以后扩展就可以重新建立新的外观类，从而保证了开闭原则。

